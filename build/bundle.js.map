{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/controllers/about.ctrl.js","src/js/controllers/contact.ctrl.js","src/js/controllers/gallery.ctrl.js","src/js/controllers/home.ctrl.js","src/js/controllers/portfolio.ctrl.js","src/js/main.js","src/js/router.js","src/js/routes.js","src/js/service.js","src/js/templates/about.tpl.js","src/js/templates/contact.tpl.js","src/js/templates/gallery.tpl.js","src/js/templates/home.tpl.js","src/js/templates/portfolio.tpl.js","src/js/util.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","aboutCtrl","el","template","data","console","log","innerHTML","contactCtrl","_service","galleryCtrl","getJSON","then","gallery","homeCtrl","portfolioCtrl","galeries","_util","_routes","app","App","_classCallCheck","this","document","getElementById","router","_router2","default","add_routes","routes","doRoute","route","$on","window","Router","all_routes","path","controller","hash_frag","location","hash","slice","route_pieces","split","formatted_pcs","map","p","piece_count","sub_route","base_route","_homeCtrl","_homeTpl","_aboutCtrl","_aboutTpl","_contactCtrl","_contactTpl","_portfolioCtrl","_portfolioTpl","_galleryCtrl","_galleryTpl","home","homeTpl","about","aboutTpl","contact","contactTpl","portfolio","portfolioTpl","galleryTpl","url","xhr","XMLHttpRequest","Promise","resolve","reject","onreadystatechange","readyState","status","JSON","parse","responseText","open","send","html","literalsArr","_len","arguments","cooked","Array","_key","result","forEach","cook","indx","lit","isArray","join","_templateObject","image_link","image","large","thumb","alt","_templateObject2","title","description","images","gallery_link","link_url","img_url","galleries","target","event","handler","addEventListener"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* jshint esversion:6, devel: true */\n\n// expects (target element, template, params)\n// route.controller(el, route.template, hash_frag);\n\nfunction aboutCtrl(el, template, data) {\n    \n    console.log('AboutController > setView fired.');\n    el.innerHTML = template(data);\n    \n}\n\nexport { aboutCtrl };\n","/* jshint esversion:6, devel: true */\n\n// expects (target element, template, params)\n// route.controller(el, route.template, hash_frag);\n\nfunction contactCtrl(el, template, data) {\n    \n    console.log('Contact Controller fired.');\n    el.innerHTML = template(data);\n    \n}\n\nexport { contactCtrl };\n","/* jshint esversion:6, devel:true, browser:true */\n\nimport { getJSON } from '../service';\n\nfunction galleryCtrl(el, template, data) {\n    \n    console.log('Gallery Controller fired.');\n    console.log(`Data passed to controller: ${data}`);\n    \n    // need to capture specific gallery from 'data' hash fragment\n    // like:\n    //   getJSON(`src/js/${gallery}.json`)\n    getJSON(`server/gallery-${data}.json`)\n        .then( gallery => {\n            el.innerHTML = template(gallery);\n    });\n    \n}\n\nexport { galleryCtrl };\n\n","/* jshint esversion:6, devel: true */\n\n// expects (target element, template, params)\n// route.controller(el, route.template, hash_frag);\n\nfunction homeCtrl(el, template, data) {\n    \n    console.log('HomeController fired.');\n    el.innerHTML = template(data);\n    \n}\n\nexport { homeCtrl };\n","/* jshint esversion:6, devel: true */\n\nimport { getJSON } from '../service';\n\nfunction portfolioCtrl(el, template, data) {\n    \n    console.log('Portfolio Controller fired.');\n    console.log(`Data passed to controller: ${data}`);\n        \n    getJSON('server/mock.json')\n        .then( galeries => {\n            el.innerHTML = template(galeries);\n    });\n    \n}\n\nexport { portfolioCtrl };\n","/* jshint esversion:6, browser:true */\n\nimport { $on }    from './util';\nimport Router     from './router';\nimport { routes } from './routes';\n\nclass App {\n    \n    constructor() {\n        this.el = document.getElementById('target');\n        this.router = new Router();\n    }\n    \n}\n\nconst app = new App();\n\n// register routes using imported `routes` object\napp.router.add_routes(routes);\n\n// event handler; calls router's 'route' method\nconst doRoute = () => {\n    app.router.route(app.el);\n};\n\n// register event listeners\n$on(window, 'load',       doRoute);\n$on(window, 'hashchange', doRoute);\n","/* jshint esversion:6, browser:true, devel:true */\n\n/* ============================ utility methods ============================ */\n\nfunction parse_params(param_string) {\n    const input_params_arr = param_string.split('&');\n    const params = {};\n    let j = 0;\n    \n    input_params_arr.forEach( input_param => {\n        \n        // convert input param to array of key, value\n        const param = input_param.split('=');\n        \n        if (param.length === 2) {\n            \n            // if [key, value] then {key: value}\n            params[param[0]] = param[1];\n            \n        } else if (param.length === 1) {\n            \n            // else, {j: key}\n            params[j] = param[0];\n            j += 1;\n            \n        } else {\n            console.log('bad param - die!');\n        }\n        \n    });\n    \n    return params;\n}\n\n\n/* =========================== class definition ============================ */\n\nexport default class Router {\n    \n    constructor() {\n        this.routes = {};\n    }\n    \n    /* route registering function\n     *\n     * @param   [object]    allRoutes\n     * @param   [string]      .path         [URL to route to]\n     * @param   [function]    .template     [template function]\n     * @param   [function]    .controller   [controller function]\n    */\n    add_routes(all_routes) {\n        \n        for (let route in all_routes) {\n            \n            let r = all_routes[route];\n            \n            this.routes[r.path] = {\n                template   : r.template,\n                controller : r.controller\n            };\n        }\n    }\n    \n    \n    /* router\n     *\n     * @param   [string]   el   [target DOM element for route content]\n    */\n    route(el) {\n        const hash_frag = location.hash.slice(1) || '/';\n        \n        const delimiter     = '/',\n              route_pieces  = hash_frag.split(delimiter),\n              formatted_pcs = route_pieces.map( p => '/' + p),\n              piece_count   = route_pieces.length,\n              sub_route     = route_pieces[3] || '',\n              base_route    = piece_count > 3 ? formatted_pcs[1] + formatted_pcs[2] : formatted_pcs[1];\n\n        // capture specific route object from 'routes'\n        let route = this.routes[base_route];\n        \n        // redirect to home on invalid route\n        if (!route) { route = this.routes['/']; }\n        \n        console.log('======= Router Diagnostics =======');\n        console.log('hash_frag    : ', hash_frag);\n        console.log('route_pieces : ', route_pieces);\n        console.log('base_route   : ', base_route);\n        \n        // if there's an element & controller, execute the route\n        if (el && route.controller) {\n            route.controller(el, route.template, sub_route);\n        }\n    }\n    \n}\n","/* jshint esversion:6 */\n\nimport { homeCtrl }      from './controllers/home.ctrl.js';\nimport { homeTpl }       from './templates/home.tpl.js';\n\nimport { aboutCtrl }     from './controllers/about.ctrl.js';\nimport { aboutTpl }      from './templates/about.tpl.js';\n\nimport { contactCtrl }   from './controllers/contact.ctrl.js';\nimport { contactTpl }    from './templates/contact.tpl.js';\n\nimport { portfolioCtrl } from './controllers/portfolio.ctrl.js';\nimport { portfolioTpl }  from './templates/portfolio.tpl.js';\n\nimport { galleryCtrl }   from './controllers/gallery.ctrl.js';\nimport { galleryTpl }    from './templates/gallery.tpl.js';\n\nconst routes = {\n    \n    home : {\n        path       : '/',\n        template   : homeTpl,\n        controller : homeCtrl\n    },\n    \n    about : {\n        path       : '/about',\n        template   : aboutTpl,\n        controller : aboutCtrl\n    },\n    \n    contact : {\n        path       : '/contact',\n        template   : contactTpl,\n        controller : contactCtrl\n    },\n    \n    portfolio : {\n        path       : '/portfolio',\n        template   : portfolioTpl,\n        controller : portfolioCtrl\n    },\n    \n    gallery : {\n        path       : '/portfolio/gallery',\n        template   : galleryTpl,\n        controller : galleryCtrl\n    }\n    \n};\n\nexport { routes };\n","/* jshint esversion:6, browser:true */\n\nconst getJSON = (url) => {\n    const xhr = new XMLHttpRequest();\n    return new Promise( (resolve, reject) => {\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n                    resolve(JSON.parse(xhr.responseText));\n                } else {\n                    reject(xhr.responseText);\n                }\n            }\n        };\n        xhr.open('GET', url);\n        xhr.send();\n    });\n};\n\nexport { getJSON };\n","/* jshint esversion:6 */\n\n/* utility method for easy templating of repeating html elements\n *\n * @params  [array]  literalsArr   [array of all the literal secti\n * @params  [array]  ...cooked     [rest param: all the proccessed expressions]\n * @returns [string]               [the processed string]\n*/\nconst html = (literalsArr, ...cooked) => {\n    let result = '';\n    \n    cooked.forEach( (cook, indx) => {\n        let lit = literalsArr[indx];\n        if (Array.isArray(cook)) {\n            cook = cook.join('');\n        }\n        result += lit;\n        result += cook;\n    });\n    result += literalsArr[literalsArr.length - 1];\n    return result;\n};\n\n\n/* generate gallery link\n*/\nconst aboutTpl = (data) => html`\n    <h2>About</h2>\n    <p>Lorem ipsum dolor sit amet, qui dico erat intellegebat an, at his munere erroribus mediocritatem. Equidem principes est ad, has ei vide diceret. Pro oblique posidonium repudiandae no, putent doctus ocurreret ex eam. Facer semper assueverit an mei, in nec altera nonumes veritus. His dolores invenire dissentiunt ei, eros tation sapientem nec ad, unum maiorum fierent ne ius. At harum aeterno vim, id dicam utroque pri, ne aperiam dissentias sed. Duo ad dolore voluptua, facer doctus placerat his no, mel an elit offendit.</p>\n\n    <p>Quas deleniti imperdiet ad sed, eam in mundi affert corrumpit. Ex eos utinam timeam consequat, duo et dico audiam vituperatoribus, eum cu tacimates mandamus ullamcorper. Cu admodum persequeris definitiones cum, eu his audiam complectitur. Appetere eloquentiam ex mel, summo ullamcorper vituperatoribus in vim, ut natum eripuit euismod cum. Ex eleifend conceptam cum, mei ei aeterno officiis mnesarchum.</p>\n\n    <p>Mei in debet aliquip. Id dictas tacimates voluptatibus eum, tollit suavitate expetendis te has, sea oblique dolorem ne. Te qui affert delectus mediocrem, te sed vidisse ponderum, modus nusquam probatus te sea. Nec id utamur periculis.</p>\n\n    <p>Bonorum iracundia inciderint pro eu, quo ei impedit partiendo tincidunt, odio dolores duo ne. Sea et eros fugit interesset, quo mucius efficiendi eloquentiam eu. Vis causae inermis reformidans ex. Sit te voluptua repudiare, eum tota ludus no, eu pro iudico inimicus.</p>\n\n    <p>Mea id solet equidem graecis, atqui assentior adipiscing ius id, eum scripserit dissentiet ea. Quo ne decore latine, eu homero vituperatoribus his, no falli graece vim. Novum facilisis ut mea, an cum probo legere dolorem, omnium dolores accusamus eum te. Rebum gloriatur qui ea, augue posidonium per in. In impedit facilis deseruisse vim.</p>\n`;\n\nexport { aboutTpl };\n","/* jshint esversion:6 */\n\n/* utility method for easy templating of repeating html elements\n *\n * @params  [array]  literalsArr   [array of all the literal secti\n * @params  [array]  ...cooked     [rest param: all the proccessed expressions]\n * @returns [string]               [the processed string]\n*/\nconst html = (literalsArr, ...cooked) => {\n    let result = '';\n    \n    cooked.forEach( (cook, indx) => {\n        let lit = literalsArr[indx];\n        if (Array.isArray(cook)) {\n            cook = cook.join('');\n        }\n        result += lit;\n        result += cook;\n    });\n    result += literalsArr[literalsArr.length - 1];\n    return result;\n};\n\n\n/* generate gallery link\n*/\nconst contactTpl = () => html`\n    <h2>Contact</h2>\n    \n    <h3>Fill out our contact form below to get in touch with us!</h3>\n    <form>\n        <div class=\"Grid Grid--gutters Grid--1of2\">\n            <div class=\"Grid-cell\">\n                <label for=\"name\">Name:</label>\n                <input type=\"text\" id=\"name\" name=\"name\" value=\"\" placeholder=\"John Doe\" required=\"required\" autofocus=\"autofocus\" />\n\n                <label for=\"email\">Email Address:</label>\n                <input type=\"email\" id=\"email\" name=\"email\" value=\"\" placeholder=\"johndoe@example.com\" required=\"required\" />\n\n                <label for=\"telephone\">Telephone: </label>\n                <input type=\"tel\" id=\"telephone\" name=\"telephone\" value=\"\" />\n\n                <label for=\"enquiry\">Enquiry: </label>\n                <select id=\"enquiry\" name=\"enquiry\">\n                    <option value=\"general\">General</option>\n                    <option value=\"sales\">Hire Me</option>\n                </select>\n            </div>\n\n            <div class=\"Grid-cell\">\n                <label for=\"message\">Message:</label>\n                <textarea id=\"message\" name=\"message\" placeholder=\"Your message must be greater than 20 charcters\" required=\"required\" data-minlength=\"20\"></textarea>\n            </div>\n        </div>\n         \n        <button id=\"submit-button\">Submit</button>\n    </form>\n`;\n\nexport { contactTpl };\n","/* jshint esversion:6 */\n\n/* utility method for easy templating of repeating html elements\n *\n * @params  [array]  literalsArr   [array of all the literal secti\n * @params  [array]  ...cooked     [rest param: all the proccessed expressions]\n * @returns [string]               [the processed string]\n*/\nconst html = (literalsArr, ...cooked) => {\n    let result = '';\n    \n    cooked.forEach( (cook, indx) => {\n        let lit = literalsArr[indx];\n        if (Array.isArray(cook)) {\n            cook = cook.join('');\n        }\n        result += lit;\n        result += cook;\n    });\n    result += literalsArr[literalsArr.length - 1];\n    return result;\n};\n\n\n/* generate gallery link\n*/\nconst image_link = (image) => html`\n    <div class=\"gallery-link Grid-cell\">\n        <a href=\"${image.large}\">\n            <div class=\"gallery-link-img\" style=\"background-image: url(${image.thumb})\"></div>\n            <div class=\"gallery-link-title\">\n                ${image.alt}\n            </div>\n        </a>\n    </div>\n`;\n\n\n/* generate grid list of galleries\n*/\nconst galleryTpl = (gallery) => html`\n    <h2>${gallery.title}</h2>\n    <p>${gallery.description}</p>\n    <div class=\"Grid Grid--gutters small-Grid--full med-Grid--1of2 large-Grid--1of3 gallery-list\">\n        ${gallery.images.map( image => image_link(image) )}\n    </div>\n`;\n\nexport { galleryTpl };\n","/* jshint esversion:6 */\n\n/* utility method for easy templating of repeating html elements\n *\n * @params  [array]  literalsArr   [array of all the literal secti\n * @params  [array]  ...cooked     [rest param: all the proccessed expressions]\n * @returns [string]               [the processed string]\n*/\nconst html = (literalsArr, ...cooked) => {\n    let result = '';\n    \n    cooked.forEach( (cook, indx) => {\n        let lit = literalsArr[indx];\n        if (Array.isArray(cook)) {\n            cook = cook.join('');\n        }\n        result += lit;\n        result += cook;\n    });\n    result += literalsArr[literalsArr.length - 1];\n    return result;\n};\n\n\n/* generate gallery link\n*/\nconst homeTpl = (data) => html`\n    <h2>Welcome</h2>\n    \n    <h3>This is a Photo Gallery App written in vanilla ES6 JavaScript</h3>\n    <p>If you can read this, the app router sent you to the home page.</p>\n`;\n\nexport { homeTpl };\n","/* jshint esversion:6 */\n\n/* utility method for easy templating of repeating html elements\n *\n * @params  [array]  literalsArr   [array of all the literal secti\n * @params  [array]  ...cooked     [rest param: all the proccessed expressions]\n * @returns [string]               [the processed string]\n*/\nconst html = (literalsArr, ...cooked) => {\n    let result = '';\n    \n    cooked.forEach( (cook, indx) => {\n        let lit = literalsArr[indx];\n        if (Array.isArray(cook)) {\n            cook = cook.join('');\n        }\n        result += lit;\n        result += cook;\n    });\n    result += literalsArr[literalsArr.length - 1];\n    return result;\n};\n\n\n/* generate gallery link\n*/\nconst gallery_link = (gallery) => html`\n    <div class=\"gallery-link Grid-cell\">\n        <a href=\"${gallery.link_url}\">\n            <div class=\"gallery-link-img\" style=\"background-image: url(${gallery.img_url})\"></div>\n            <div class=\"gallery-link-title\">\n                ${gallery.title}\n            </div>\n        </a>\n    </div>\n`;\n\n\n/* generate grid list of galleries\n*/\nconst portfolioTpl = (galleries) => html`\n    <div class=\"Grid Grid--gutters small-Grid--full med-Grid--1of2 large-Grid--1of3 gallery-list\">\n        ${galleries.map( gallery => gallery_link(gallery) )}\n    </div>\n`;\n\nexport { portfolioTpl };\n","/* jshint esversion:6, browser:true */\n\n/* register handler to an event emitted by a target */\nconst $on = (target, event, handler) => {\n    return target.addEventListener(event, handler);\n};\n\nexport { $on };\n"]}