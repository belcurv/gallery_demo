{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/controllers/about.ctrl.js","src/js/controllers/contact.ctrl.js","src/js/controllers/gallery.ctrl.js","src/js/controllers/home.ctrl.js","src/js/controllers/portfolio.ctrl.js","src/js/main.js","src/js/router.js","src/js/routes.js","src/js/service.js","src/js/templates/about.tpl.js","src/js/templates/contact.tpl.js","src/js/templates/gallery.tpl.js","src/js/templates/home.tpl.js","src/js/templates/portfolio.tpl.js","src/js/util.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* jshint esversion:6, devel: true */\n\n// expects (target element, template, params)\n// route.controller(el, route.template, hash_frag);\n\nfunction aboutCtrl(el, template, data) {\n    \n    console.log('AboutController > setView fired.');\n    el.innerHTML = template(data);\n    \n}\n\nexport { aboutCtrl };\n","/* jshint esversion:6, devel: true */\n\n// expects (target element, template, params)\n// route.controller(el, route.template, hash_frag);\n\nfunction contactCtrl(el, template, data) {\n    \n    console.log('Contact Controller fired.');\n    el.innerHTML = template(data);\n    \n}\n\nexport { contactCtrl };\n","/* jshint esversion:6, devel:true, browser:true */\n\nimport { getJSON } from '../service';\n\nfunction galleryCtrl(el, template, data) {\n    \n    console.log('Gallery Controller fired.');\n    console.log(`Data passed to controller: ${data}`);\n    \n    // need to capture specific gallery from 'data' hash fragment\n    // like:\n    //   getJSON(`src/js/${gallery}.json`)\n    getJSON(`/server/gallery-${data}.json`)\n        .then( gallery => {\n            el.innerHTML = template(gallery);\n    });\n    \n}\n\nexport { galleryCtrl };\n\n","/* jshint esversion:6, devel: true */\n\n// expects (target element, template, params)\n// route.controller(el, route.template, hash_frag);\n\nfunction homeCtrl(el, template, data) {\n    \n    console.log('HomeController fired.');\n    el.innerHTML = template(data);\n    \n}\n\nexport { homeCtrl };\n","/* jshint esversion:6, devel: true */\n\nimport { getJSON } from '../service';\n\nfunction portfolioCtrl(el, template, data) {\n    \n    console.log('Portfolio Controller fired.');\n    console.log(`Data passed to controller: ${data}`);\n        \n    getJSON('server/mock.json')\n        .then( galeries => {\n            el.innerHTML = template(galeries);\n    });\n    \n}\n\nexport { portfolioCtrl };\n","/* jshint esversion:6, browser:true */\n\nimport { $on }    from './util';\nimport Router     from './router';\nimport { routes } from './routes';\n\nclass App {\n    \n    constructor() {\n        this.el = document.getElementById('target');\n        this.router = new Router();\n    }\n    \n}\n\nconst app = new App();\n\n// register routes using imported `routes` object\napp.router.add_routes(routes);\n\n// event handler; calls router's 'route' method\nconst doRoute = () => {\n    app.router.route(app.el);\n};\n\n// register event listeners\n$on(window, 'load',       doRoute);\n$on(window, 'hashchange', doRoute);\n","/* jshint esversion:6, browser:true, devel:true */\n\n/* ============================ utility methods ============================ */\n\nfunction parse_params(param_string) {\n    const input_params_arr = param_string.split('&');\n    const params = {};\n    let j = 0;\n    \n    input_params_arr.forEach( input_param => {\n        \n        // convert input param to array of key, value\n        const param = input_param.split('=');\n        \n        if (param.length === 2) {\n            \n            // if [key, value] then {key: value}\n            params[param[0]] = param[1];\n            \n        } else if (param.length === 1) {\n            \n            // else, {j: key}\n            params[j] = param[0];\n            j += 1;\n            \n        } else {\n            console.log('bad param - die!');\n        }\n        \n    });\n    \n    return params;\n}\n\n\n/* =========================== class definition ============================ */\n\nexport default class Router {\n    \n    constructor() {\n        this.routes = {};\n    }\n    \n    /* route registering function\n     *\n     * @param   [object]    allRoutes\n     * @param   [string]      .path         [URL to route to]\n     * @param   [function]    .template     [template function]\n     * @param   [function]    .controller   [controller function]\n    */\n    add_routes(all_routes) {\n        \n        for (let route in all_routes) {\n            \n            let r = all_routes[route];\n            \n            this.routes[r.path] = {\n                template   : r.template,\n                controller : r.controller\n            };\n        }\n    }\n    \n    \n    /* router\n     *\n     * @param   [string]   el   [target DOM element for route content]\n    */\n    route(el) {\n        const hash_frag = location.hash.slice(1) || '/';\n        \n        const delimiter     = '/',\n              route_pieces  = hash_frag.split(delimiter),\n              formatted_pcs = route_pieces.map( p => '/' + p),\n              piece_count   = route_pieces.length,\n              sub_route     = route_pieces[3] || '',\n              base_route    = piece_count > 3 ? formatted_pcs[1] + formatted_pcs[2] : formatted_pcs[1];\n\n        // capture specific route object from 'routes'\n        let route = this.routes[base_route];\n        \n        // redirect to home on invalid route\n        if (!route) { route = this.routes['/']; }\n        \n        console.log('======= Router Diagnostics =======');\n        console.log('hash_frag    : ', hash_frag);\n        console.log('route_pieces : ', route_pieces);\n        console.log('base_route   : ', base_route);\n        \n        // if there's an element & controller, execute the route\n        if (el && route.controller) {\n            route.controller(el, route.template, sub_route);\n        }\n    }\n    \n}\n","/* jshint esversion:6 */\n\nimport { homeCtrl }      from './controllers/home.ctrl.js';\nimport { homeTpl }       from './templates/home.tpl.js';\n\nimport { aboutCtrl }     from './controllers/about.ctrl.js';\nimport { aboutTpl }      from './templates/about.tpl.js';\n\nimport { contactCtrl }   from './controllers/contact.ctrl.js';\nimport { contactTpl }    from './templates/contact.tpl.js';\n\nimport { portfolioCtrl } from './controllers/portfolio.ctrl.js';\nimport { portfolioTpl }  from './templates/portfolio.tpl.js';\n\nimport { galleryCtrl }   from './controllers/gallery.ctrl.js';\nimport { galleryTpl }    from './templates/gallery.tpl.js';\n\nconst routes = {\n    \n    home : {\n        path       : '/',\n        template   : homeTpl,\n        controller : homeCtrl\n    },\n    \n    about : {\n        path       : '/about',\n        template   : aboutTpl,\n        controller : aboutCtrl\n    },\n    \n    contact : {\n        path       : '/contact',\n        template   : contactTpl,\n        controller : contactCtrl\n    },\n    \n    portfolio : {\n        path       : '/portfolio',\n        template   : portfolioTpl,\n        controller : portfolioCtrl\n    },\n    \n    gallery : {\n        path       : '/portfolio/gallery',\n        template   : galleryTpl,\n        controller : galleryCtrl\n    }\n    \n};\n\nexport { routes };\n","/* jshint esversion:6, browser:true */\n\nconst getJSON = (url) => {\n    const xhr = new XMLHttpRequest();\n    return new Promise( (resolve, reject) => {\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n                    resolve(JSON.parse(xhr.responseText));\n                } else {\n                    reject(xhr.responseText);\n                }\n            }\n        };\n        xhr.open('GET', url);\n        xhr.send();\n    });\n};\n\nexport { getJSON };\n","/* jshint esversion:6 */\n\n/* utility method for easy templating of repeating html elements\n *\n * @params  [array]  literalsArr   [array of all the literal secti\n * @params  [array]  ...cooked     [rest param: all the proccessed expressions]\n * @returns [string]               [the processed string]\n*/\nconst html = (literalsArr, ...cooked) => {\n    let result = '';\n    \n    cooked.forEach( (cook, indx) => {\n        let lit = literalsArr[indx];\n        if (Array.isArray(cook)) {\n            cook = cook.join('');\n        }\n        result += lit;\n        result += cook;\n    });\n    result += literalsArr[literalsArr.length - 1];\n    return result;\n};\n\n\n/* generate gallery link\n*/\nconst aboutTpl = (data) => html`\n    <h2>About</h2>\n    <p>Lorem ipsum dolor sit amet, qui dico erat intellegebat an, at his munere erroribus mediocritatem. Equidem principes est ad, has ei vide diceret. Pro oblique posidonium repudiandae no, putent doctus ocurreret ex eam. Facer semper assueverit an mei, in nec altera nonumes veritus. His dolores invenire dissentiunt ei, eros tation sapientem nec ad, unum maiorum fierent ne ius. At harum aeterno vim, id dicam utroque pri, ne aperiam dissentias sed. Duo ad dolore voluptua, facer doctus placerat his no, mel an elit offendit.</p>\n\n    <p>Quas deleniti imperdiet ad sed, eam in mundi affert corrumpit. Ex eos utinam timeam consequat, duo et dico audiam vituperatoribus, eum cu tacimates mandamus ullamcorper. Cu admodum persequeris definitiones cum, eu his audiam complectitur. Appetere eloquentiam ex mel, summo ullamcorper vituperatoribus in vim, ut natum eripuit euismod cum. Ex eleifend conceptam cum, mei ei aeterno officiis mnesarchum.</p>\n\n    <p>Mei in debet aliquip. Id dictas tacimates voluptatibus eum, tollit suavitate expetendis te has, sea oblique dolorem ne. Te qui affert delectus mediocrem, te sed vidisse ponderum, modus nusquam probatus te sea. Nec id utamur periculis.</p>\n\n    <p>Bonorum iracundia inciderint pro eu, quo ei impedit partiendo tincidunt, odio dolores duo ne. Sea et eros fugit interesset, quo mucius efficiendi eloquentiam eu. Vis causae inermis reformidans ex. Sit te voluptua repudiare, eum tota ludus no, eu pro iudico inimicus.</p>\n\n    <p>Mea id solet equidem graecis, atqui assentior adipiscing ius id, eum scripserit dissentiet ea. Quo ne decore latine, eu homero vituperatoribus his, no falli graece vim. Novum facilisis ut mea, an cum probo legere dolorem, omnium dolores accusamus eum te. Rebum gloriatur qui ea, augue posidonium per in. In impedit facilis deseruisse vim.</p>\n`;\n\nexport { aboutTpl };\n","/* jshint esversion:6 */\n\n/* utility method for easy templating of repeating html elements\n *\n * @params  [array]  literalsArr   [array of all the literal secti\n * @params  [array]  ...cooked     [rest param: all the proccessed expressions]\n * @returns [string]               [the processed string]\n*/\nconst html = (literalsArr, ...cooked) => {\n    let result = '';\n    \n    cooked.forEach( (cook, indx) => {\n        let lit = literalsArr[indx];\n        if (Array.isArray(cook)) {\n            cook = cook.join('');\n        }\n        result += lit;\n        result += cook;\n    });\n    result += literalsArr[literalsArr.length - 1];\n    return result;\n};\n\n\n/* generate gallery link\n*/\nconst contactTpl = () => html`\n    <h2>Contact</h2>\n    \n    <h3>Fill out our contact form below to get in touch with us!</h3>\n    <form>\n        <div class=\"Grid Grid--gutters Grid--1of2\">\n            <div class=\"Grid-cell\">\n                <label for=\"name\">Name:</label>\n                <input type=\"text\" id=\"name\" name=\"name\" value=\"\" placeholder=\"John Doe\" required=\"required\" autofocus=\"autofocus\" />\n\n                <label for=\"email\">Email Address:</label>\n                <input type=\"email\" id=\"email\" name=\"email\" value=\"\" placeholder=\"johndoe@example.com\" required=\"required\" />\n\n                <label for=\"telephone\">Telephone: </label>\n                <input type=\"tel\" id=\"telephone\" name=\"telephone\" value=\"\" />\n\n                <label for=\"enquiry\">Enquiry: </label>\n                <select id=\"enquiry\" name=\"enquiry\">\n                    <option value=\"general\">General</option>\n                    <option value=\"sales\">Hire Me</option>\n                </select>\n            </div>\n\n            <div class=\"Grid-cell\">\n                <label for=\"message\">Message:</label>\n                <textarea id=\"message\" name=\"message\" placeholder=\"Your message must be greater than 20 charcters\" required=\"required\" data-minlength=\"20\"></textarea>\n            </div>\n        </div>\n         \n        <button id=\"submit-button\">Submit</button>\n    </form>\n`;\n\nexport { contactTpl };\n","/* jshint esversion:6 */\n\n/* utility method for easy templating of repeating html elements\n *\n * @params  [array]  literalsArr   [array of all the literal secti\n * @params  [array]  ...cooked     [rest param: all the proccessed expressions]\n * @returns [string]               [the processed string]\n*/\nconst html = (literalsArr, ...cooked) => {\n    let result = '';\n    \n    cooked.forEach( (cook, indx) => {\n        let lit = literalsArr[indx];\n        if (Array.isArray(cook)) {\n            cook = cook.join('');\n        }\n        result += lit;\n        result += cook;\n    });\n    result += literalsArr[literalsArr.length - 1];\n    return result;\n};\n\n\n/* generate gallery link\n*/\nconst image_link = (image) => html`\n    <div class=\"gallery-link Grid-cell\">\n        <a href=\"${image.large}\">\n            <div class=\"gallery-link-img\" style=\"background-image: url(${image.thumb})\"></div>\n            <div class=\"gallery-link-title\">\n                ${image.alt}\n            </div>\n        </a>\n    </div>\n`;\n\n\n/* generate grid list of galleries\n*/\nconst galleryTpl = (gallery) => html`\n    <h2>${gallery.title}</h2>\n    <p>${gallery.description}</p>\n    <div class=\"Grid Grid--gutters small-Grid--full med-Grid--1of2 large-Grid--1of3 gallery-list\">\n        ${gallery.images.map( image => image_link(image) )}\n    </div>\n`;\n\nexport { galleryTpl };\n","/* jshint esversion:6 */\n\n/* utility method for easy templating of repeating html elements\n *\n * @params  [array]  literalsArr   [array of all the literal secti\n * @params  [array]  ...cooked     [rest param: all the proccessed expressions]\n * @returns [string]               [the processed string]\n*/\nconst html = (literalsArr, ...cooked) => {\n    let result = '';\n    \n    cooked.forEach( (cook, indx) => {\n        let lit = literalsArr[indx];\n        if (Array.isArray(cook)) {\n            cook = cook.join('');\n        }\n        result += lit;\n        result += cook;\n    });\n    result += literalsArr[literalsArr.length - 1];\n    return result;\n};\n\n\n/* generate gallery link\n*/\nconst homeTpl = (data) => html`\n    <h2>Welcome</h2>\n    \n    <h3>This is a Photo Gallery App written in vanilla ES6 JavaScript</h3>\n    <p>If you can read this, the app router sent you to the home page.</p>\n`;\n\nexport { homeTpl };\n","/* jshint esversion:6 */\n\n/* utility method for easy templating of repeating html elements\n *\n * @params  [array]  literalsArr   [array of all the literal secti\n * @params  [array]  ...cooked     [rest param: all the proccessed expressions]\n * @returns [string]               [the processed string]\n*/\nconst html = (literalsArr, ...cooked) => {\n    let result = '';\n    \n    cooked.forEach( (cook, indx) => {\n        let lit = literalsArr[indx];\n        if (Array.isArray(cook)) {\n            cook = cook.join('');\n        }\n        result += lit;\n        result += cook;\n    });\n    result += literalsArr[literalsArr.length - 1];\n    return result;\n};\n\n\n/* generate gallery link\n*/\nconst gallery_link = (gallery) => html`\n    <div class=\"gallery-link Grid-cell\">\n        <a href=\"${gallery.link_url}\">\n            <div class=\"gallery-link-img\" style=\"background-image: url(${gallery.img_url})\"></div>\n            <div class=\"gallery-link-title\">\n                ${gallery.title}\n            </div>\n        </a>\n    </div>\n`;\n\n\n/* generate grid list of galleries\n*/\nconst portfolioTpl = (galleries) => html`\n    <div class=\"Grid Grid--gutters small-Grid--full med-Grid--1of2 large-Grid--1of3 gallery-list\">\n        ${galleries.map( gallery => gallery_link(gallery) )}\n    </div>\n`;\n\nexport { portfolioTpl };\n","/* jshint esversion:6, browser:true */\n\n/* register handler to an event emitted by a target */\nconst $on = (target, event, handler) => {\n    return target.addEventListener(event, handler);\n};\n\nexport { $on };\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvY29udHJvbGxlcnMvYWJvdXQuY3RybC5qcyIsInNyYy9qcy9jb250cm9sbGVycy9jb250YWN0LmN0cmwuanMiLCJzcmMvanMvY29udHJvbGxlcnMvZ2FsbGVyeS5jdHJsLmpzIiwic3JjL2pzL2NvbnRyb2xsZXJzL2hvbWUuY3RybC5qcyIsInNyYy9qcy9jb250cm9sbGVycy9wb3J0Zm9saW8uY3RybC5qcyIsInNyYy9qcy9tYWluLmpzIiwic3JjL2pzL3JvdXRlci5qcyIsInNyYy9qcy9yb3V0ZXMuanMiLCJzcmMvanMvc2VydmljZS5qcyIsInNyYy9qcy90ZW1wbGF0ZXMvYWJvdXQudHBsLmpzIiwic3JjL2pzL3RlbXBsYXRlcy9jb250YWN0LnRwbC5qcyIsInNyYy9qcy90ZW1wbGF0ZXMvZ2FsbGVyeS50cGwuanMiLCJzcmMvanMvdGVtcGxhdGVzL2hvbWUudHBsLmpzIiwic3JjL2pzL3RlbXBsYXRlcy9wb3J0Zm9saW8udHBsLmpzIiwic3JjL2pzL3V0aWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQ0FBOztBQUVBO0FBQ0E7O0FBRUEsU0FBUyxTQUFULENBQW1CLEVBQW5CLEVBQXVCLFFBQXZCLEVBQWlDLElBQWpDLEVBQXVDOztBQUVuQyxZQUFRLEdBQVIsQ0FBWSxrQ0FBWjtBQUNBLE9BQUcsU0FBSCxHQUFlLFNBQVMsSUFBVCxDQUFmO0FBRUg7O1FBRVEsUyxHQUFBLFM7Ozs7Ozs7O0FDWlQ7O0FBRUE7QUFDQTs7QUFFQSxTQUFTLFdBQVQsQ0FBcUIsRUFBckIsRUFBeUIsUUFBekIsRUFBbUMsSUFBbkMsRUFBeUM7O0FBRXJDLFlBQVEsR0FBUixDQUFZLDJCQUFaO0FBQ0EsT0FBRyxTQUFILEdBQWUsU0FBUyxJQUFULENBQWY7QUFFSDs7UUFFUSxXLEdBQUEsVzs7Ozs7Ozs7OztBQ1ZUOztBQUVBLFNBQVMsV0FBVCxDQUFxQixFQUFy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cyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIi8qIGpzaGludCBlc3ZlcnNpb246NiwgZGV2ZWw6IHRydWUgKi9cblxuLy8gZXhwZWN0cyAodGFyZ2V0IGVsZW1lbnQsIHRlbXBsYXRlLCBwYXJhbXMpXG4vLyByb3V0ZS5jb250cm9sbGVyKGVsLCByb3V0ZS50ZW1wbGF0ZSwgaGFzaF9mcmFnKTtcblxuZnVuY3Rpb24gYWJvdXRDdHJsKGVsLCB0ZW1wbGF0ZSwgZGF0YSkge1xuICAgIFxuICAgIGNvbnNvbGUubG9nKCdBYm91dENvbnRyb2xsZXIgPiBzZXRWaWV3IGZpcmVkLicpO1xuICAgIGVsLmlubmVySFRNTCA9IHRlbXBsYXRlKGRhdGEpO1xuICAgIFxufVxuXG5leHBvcnQgeyBhYm91dEN0cmwgfTtcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246NiwgZGV2ZWw6IHRydWUgKi9cblxuLy8gZXhwZWN0cyAodGFyZ2V0IGVsZW1lbnQsIHRlbXBsYXRlLCBwYXJhbXMpXG4vLyByb3V0ZS5jb250cm9sbGVyKGVsLCByb3V0ZS50ZW1wbGF0ZSwgaGFzaF9mcmFnKTtcblxuZnVuY3Rpb24gY29udGFjdEN0cmwoZWwsIHRlbXBsYXRlLCBkYXRhKSB7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ0NvbnRhY3QgQ29udHJvbGxlciBmaXJlZC4nKTtcbiAgICBlbC5pbm5lckhUTUwgPSB0ZW1wbGF0ZShkYXRhKTtcbiAgICBcbn1cblxuZXhwb3J0IHsgY29udGFjdEN0cmwgfTtcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246NiwgZGV2ZWw6dHJ1ZSwgYnJvd3Nlcjp0cnVlICovXG5cbmltcG9ydCB7IGdldEpTT04gfSBmcm9tICcuLi9zZXJ2aWNlJztcblxuZnVuY3Rpb24gZ2FsbGVyeUN0cmwoZWwsIHRlbXBsYXRlLCBkYXRhKSB7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ0dhbGxlcnkgQ29udHJvbGxlciBmaXJlZC4nKTtcbiAgICBjb25zb2xlLmxvZyhgRGF0YSBwYXNzZWQgdG8gY29udHJvbGxlcjogJHtkYXRhfWApO1xuICAgIFxuICAgIC8vIG5lZWQgdG8gY2FwdHVyZSBzcGVjaWZpYyBnYWxsZXJ5IGZyb20gJ2RhdGEnIGhhc2ggZnJhZ21lbnRcbiAgICAvLyBsaWtlOlxuICAgIC8vICAgZ2V0SlNPTihgc3JjL2pzLyR7Z2FsbGVyeX0uanNvbmApXG4gICAgZ2V0SlNPTihgL3NlcnZlci9nYWxsZXJ5LSR7ZGF0YX0uanNvbmApXG4gICAgICAgIC50aGVuKCBnYWxsZXJ5ID0+IHtcbiAgICAgICAgICAgIGVsLmlubmVySFRNTCA9IHRlbXBsYXRlKGdhbGxlcnkpO1xuICAgIH0pO1xuICAgIFxufVxuXG5leHBvcnQgeyBnYWxsZXJ5Q3RybCB9O1xuXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOjYsIGRldmVsOiB0cnVlICovXG5cbi8vIGV4cGVjdHMgKHRhcmdldCBlbGVtZW50LCB0ZW1wbGF0ZSwgcGFyYW1zKVxuLy8gcm91dGUuY29udHJvbGxlcihlbCwgcm91dGUudGVtcGxhdGUsIGhhc2hfZnJhZyk7XG5cbmZ1bmN0aW9uIGhvbWVDdHJsKGVsLCB0ZW1wbGF0ZSwgZGF0YSkge1xuICAgIFxuICAgIGNvbnNvbGUubG9nKCdIb21lQ29udHJvbGxlciBmaXJlZC4nKTtcbiAgICBlbC5pbm5lckhUTUwgPSB0ZW1wbGF0ZShkYXRhKTtcbiAgICBcbn1cblxuZXhwb3J0IHsgaG9tZUN0cmwgfTtcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246NiwgZGV2ZWw6IHRydWUgKi9cblxuaW1wb3J0IHsgZ2V0SlNPTiB9IGZyb20gJy4uL3NlcnZpY2UnO1xuXG5mdW5jdGlvbiBwb3J0Zm9saW9DdHJsKGVsLCB0ZW1wbGF0ZSwgZGF0YSkge1xuICAgIFxuICAgIGNvbnNvbGUubG9nKCdQb3J0Zm9saW8gQ29udHJvbGxlciBmaXJlZC4nKTtcbiAgICBjb25zb2xlLmxvZyhgRGF0YSBwYXNzZWQgdG8gY29udHJvbGxlcjogJHtkYXRhfWApO1xuICAgICAgICBcbiAgICBnZXRKU09OKCdzZXJ2ZXIvbW9jay5qc29uJylcbiAgICAgICAgLnRoZW4oIGdhbGVyaWVzID0+IHtcbiAgICAgICAgICAgIGVsLmlubmVySFRNTCA9IHRlbXBsYXRlKGdhbGVyaWVzKTtcbiAgICB9KTtcbiAgICBcbn1cblxuZXhwb3J0IHsgcG9ydGZvbGlvQ3RybCB9O1xuIiwiLyoganNoaW50IGVzdmVyc2lvbjo2LCBicm93c2VyOnRydWUgKi9cblxuaW1wb3J0IHsgJG9uIH0gICAgZnJvbSAnLi91dGlsJztcbmltcG9ydCBSb3V0ZXIgICAgIGZyb20gJy4vcm91dGVyJztcbmltcG9ydCB7IHJvdXRlcyB9IGZyb20gJy4vcm91dGVzJztcblxuY2xhc3MgQXBwIHtcbiAgICBcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5lbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXJnZXQnKTtcbiAgICAgICAgdGhpcy5yb3V0ZXIgPSBuZXcgUm91dGVyKCk7XG4gICAgfVxuICAgIFxufVxuXG5jb25zdCBhcHAgPSBuZXcgQXBwKCk7XG5cbi8vIHJlZ2lzdGVyIHJvdXRlcyB1c2luZyBpbXBvcnRlZCBgcm91dGVzYCBvYmplY3RcbmFwcC5yb3V0ZXIuYWRkX3JvdXRlcyhyb3V0ZXMpO1xuXG4vLyBldmVudCBoYW5kbGVyOyBjYWxscyByb3V0ZXIncyAncm91dGUnIG1ldGhvZFxuY29uc3QgZG9Sb3V0ZSA9ICgpID0+IHtcbiAgICBhcHAucm91dGVyLnJvdXRlKGFwcC5lbCk7XG59O1xuXG4vLyByZWdpc3RlciBldmVudCBsaXN0ZW5lcnNcbiRvbih3aW5kb3csICdsb2FkJywgICAgICAgZG9Sb3V0ZSk7XG4kb24od2luZG93LCAnaGFzaGNoYW5nZScsIGRvUm91dGUpO1xuIiwiLyoganNoaW50IGVzdmVyc2lvbjo2LCBicm93c2VyOnRydWUsIGRldmVsOnRydWUgKi9cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PSB1dGlsaXR5IG1ldGhvZHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5mdW5jdGlvbiBwYXJzZV9wYXJhbXMocGFyYW1fc3RyaW5nKSB7XG4gICAgY29uc3QgaW5wdXRfcGFyYW1zX2FyciA9IHBhcmFtX3N0cmluZy5zcGxpdCgnJicpO1xuICAgIGNvbnN0IHBhcmFtcyA9IHt9O1xuICAgIGxldCBqID0gMDtcbiAgICBcbiAgICBpbnB1dF9wYXJhbXNfYXJyLmZvckVhY2goIGlucHV0X3BhcmFtID0+IHtcbiAgICAgICAgXG4gICAgICAgIC8vIGNvbnZlcnQgaW5wdXQgcGFyYW0gdG8gYXJyYXkgb2Yga2V5LCB2YWx1ZVxuICAgICAgICBjb25zdCBwYXJhbSA9IGlucHV0X3BhcmFtLnNwbGl0KCc9Jyk7XG4gICAgICAgIFxuICAgICAgICBpZiAocGFyYW0ubGVuZ3RoID09PSAyKSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIGlmIFtrZXksIHZhbHVlXSB0aGVuIHtrZXk6IHZhbHVlfVxuICAgICAgICAgICAgcGFyYW1zW3BhcmFtWzBdXSA9IHBhcmFtWzFdO1xuICAgICAgICAgICAgXG4gICAgICAgIH0gZWxzZSBpZiAocGFyYW0ubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIGVsc2UsIHtqOiBrZXl9XG4gICAgICAgICAgICBwYXJhbXNbal0gPSBwYXJhbVswXTtcbiAgICAgICAgICAgIGogKz0gMTtcbiAgICAgICAgICAgIFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2JhZCBwYXJhbSAtIGRpZSEnKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICB9KTtcbiAgICBcbiAgICByZXR1cm4gcGFyYW1zO1xufVxuXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PSBjbGFzcyBkZWZpbml0aW9uID09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUm91dGVyIHtcbiAgICBcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5yb3V0ZXMgPSB7fTtcbiAgICB9XG4gICAgXG4gICAgLyogcm91dGUgcmVnaXN0ZXJpbmcgZnVuY3Rpb25cbiAgICAgKlxuICAgICAqIEBwYXJhbSAgIFtvYmplY3RdICAgIGFsbFJvdXRlc1xuICAgICAqIEBwYXJhbSAgIFtzdHJpbmddICAgICAgLnBhdGggICAgICAgICBbVVJMIHRvIHJvdXRlIHRvXVxuICAgICAqIEBwYXJhbSAgIFtmdW5jdGlvbl0gICAgLnRlbXBsYXRlICAgICBbdGVtcGxhdGUgZnVuY3Rpb25dXG4gICAgICogQHBhcmFtICAgW2Z1bmN0aW9uXSAgICAuY29udHJvbGxlciAgIFtjb250cm9sbGVyIGZ1bmN0aW9uXVxuICAgICovXG4gICAgYWRkX3JvdXRlcyhhbGxfcm91dGVzKSB7XG4gICAgICAgIFxuICAgICAgICBmb3IgKGxldCByb3V0ZSBpbiBhbGxfcm91dGVzKSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGxldCByID0gYWxsX3JvdXRlc1tyb3V0ZV07XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHRoaXMucm91dGVzW3IucGF0aF0gPSB7XG4gICAgICAgICAgICAgICAgdGVtcGxhdGUgICA6IHIudGVtcGxhdGUsXG4gICAgICAgICAgICAgICAgY29udHJvbGxlciA6IHIuY29udHJvbGxlclxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBcbiAgICAvKiByb3V0ZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSAgIFtzdHJpbmddICAgZWwgICBbdGFyZ2V0IERPTSBlbGVtZW50IGZvciByb3V0ZSBjb250ZW50XVxuICAgICovXG4gICAgcm91dGUoZWwpIHtcbiAgICAgICAgY29uc3QgaGFzaF9mcmFnID0gbG9jYXRpb24uaGFzaC5zbGljZSgxKSB8fCAnLyc7XG4gICAgICAgIFxuICAgICAgICBjb25zdCBkZWxpbWl0ZXIgICAgID0gJy8nLFxuICAgICAgICAgICAgICByb3V0ZV9waWVjZXMgID0gaGFzaF9mcmFnLnNwbGl0KGRlbGltaXRlciksXG4gICAgICAgICAgICAgIGZvcm1hdHRlZF9wY3MgPSByb3V0ZV9waWVjZXMubWFwKCBwID0+ICcvJyArIHApLFxuICAgICAgICAgICAgICBwaWVjZV9jb3VudCAgID0gcm91dGVfcGllY2VzLmxlbmd0aCxcbiAgICAgICAgICAgICAgc3ViX3JvdXRlICAgICA9IHJvdXRlX3BpZWNlc1szXSB8fCAnJyxcbiAgICAgICAgICAgICAgYmFzZV9yb3V0ZSAgICA9IHBpZWNlX2NvdW50ID4gMyA/IGZvcm1hdHRlZF9wY3NbMV0gKyBmb3JtYXR0ZWRfcGNzWzJdIDogZm9ybWF0dGVkX3Bjc1sxXTtcblxuICAgICAgICAvLyBjYXB0dXJlIHNwZWNpZmljIHJvdXRlIG9iamVjdCBmcm9tICdyb3V0ZXMnXG4gICAgICAgIGxldCByb3V0ZSA9IHRoaXMucm91dGVzW2Jhc2Vfcm91dGVdO1xuICAgICAgICBcbiAgICAgICAgLy8gcmVkaXJlY3QgdG8gaG9tZSBvbiBpbnZhbGlkIHJvdXRlXG4gICAgICAgIGlmICghcm91dGUpIHsgcm91dGUgPSB0aGlzLnJvdXRlc1snLyddOyB9XG4gICAgICAgIFxuICAgICAgICBjb25zb2xlLmxvZygnPT09PT09PSBSb3V0ZXIgRGlhZ25vc3RpY3MgPT09PT09PScpO1xuICAgICAgICBjb25zb2xlLmxvZygnaGFzaF9mcmFnICAgIDogJywgaGFzaF9mcmFnKTtcbiAgICAgICAgY29uc29sZS5sb2coJ3JvdXRlX3BpZWNlcyA6ICcsIHJvdXRlX3BpZWNlcyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdiYXNlX3JvdXRlICAgOiAnLCBiYXNlX3JvdXRlKTtcbiAgICAgICAgXG4gICAgICAgIC8vIGlmIHRoZXJlJ3MgYW4gZWxlbWVudCAmIGNvbnRyb2xsZXIsIGV4ZWN1dGUgdGhlIHJvdXRlXG4gICAgICAgIGlmIChlbCAmJiByb3V0ZS5jb250cm9sbGVyKSB7XG4gICAgICAgICAgICByb3V0ZS5jb250cm9sbGVyKGVsLCByb3V0ZS50ZW1wbGF0ZSwgc3ViX3JvdXRlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cbiIsIi8qIGpzaGludCBlc3ZlcnNpb246NiAqL1xuXG5pbXBvcnQgeyBob21lQ3RybCB9ICAgICAgZnJvbSAnLi9jb250cm9sbGVycy9ob21lLmN0cmwuanMnO1xuaW1wb3J0IHsgaG9tZVRwbCB9ICAgICAgIGZyb20gJy4vdGVtcGxhdGVzL2hvbWUudHBsLmpzJztcblxuaW1wb3J0IHsgYWJvdXRDdHJsIH0gICAgIGZyb20gJy4vY29udHJvbGxlcnMvYWJvdXQuY3RybC5qcyc7XG5pbXBvcnQgeyBhYm91dFRwbCB9ICAgICAgZnJvbSAnLi90ZW1wbGF0ZXMvYWJvdXQudHBsLmpzJztcblxuaW1wb3J0IHsgY29udGFjdEN0cmwgfSAgIGZyb20gJy4vY29udHJvbGxlcnMvY29udGFjdC5jdHJsLmpzJztcbmltcG9ydCB7IGNvbnRhY3RUcGwgfSAgICBmcm9tICcuL3RlbXBsYXRlcy9jb250YWN0LnRwbC5qcyc7XG5cbmltcG9ydCB7IHBvcnRmb2xpb0N0cmwgfSBmcm9tICcuL2NvbnRyb2xsZXJzL3BvcnRmb2xpby5jdHJsLmpzJztcbmltcG9ydCB7IHBvcnRmb2xpb1RwbCB9ICBmcm9tICcuL3RlbXBsYXRlcy9wb3J0Zm9saW8udHBsLmpzJztcblxuaW1wb3J0IHsgZ2FsbGVyeUN0cmwgfSAgIGZyb20gJy4vY29udHJvbGxlcnMvZ2FsbGVyeS5jdHJsLmpzJztcbmltcG9ydCB7IGdhbGxlcnlUcGwgfSAgICBmcm9tICcuL3RlbXBsYXRlcy9nYWxsZXJ5LnRwbC5qcyc7XG5cbmNvbnN0IHJvdXRlcyA9IHtcbiAgICBcbiAgICBob21lIDoge1xuICAgICAgICBwYXRoICAgICAgIDogJy8nLFxuICAgICAgICB0ZW1wbGF0ZSAgIDogaG9tZVRwbCxcbiAgICAgICAgY29udHJvbGxlciA6IGhvbWVDdHJsXG4gICAgfSxcbiAgICBcbiAgICBhYm91dCA6IHtcbiAgICAgICAgcGF0aCAgICAgICA6ICcvYWJvdXQnLFxuICAgICAgICB0ZW1wbGF0ZSAgIDogYWJvdXRUcGwsXG4gICAgICAgIGNvbnRyb2xsZXIgOiBhYm91dEN0cmxcbiAgICB9LFxuICAgIFxuICAgIGNvbnRhY3QgOiB7XG4gICAgICAgIHBhdGggICAgICAgOiAnL2NvbnRhY3QnLFxuICAgICAgICB0ZW1wbGF0ZSAgIDogY29udGFjdFRwbCxcbiAgICAgICAgY29udHJvbGxlciA6IGNvbnRhY3RDdHJsXG4gICAgfSxcbiAgICBcbiAgICBwb3J0Zm9saW8gOiB7XG4gICAgICAgIHBhdGggICAgICAgOiAnL3BvcnRmb2xpbycsXG4gICAgICAgIHRlbXBsYXRlICAgOiBwb3J0Zm9saW9UcGwsXG4gICAgICAgIGNvbnRyb2xsZXIgOiBwb3J0Zm9saW9DdHJsXG4gICAgfSxcbiAgICBcbiAgICBnYWxsZXJ5IDoge1xuICAgICAgICBwYXRoICAgICAgIDogJy9wb3J0Zm9saW8vZ2FsbGVyeScsXG4gICAgICAgIHRlbXBsYXRlICAgOiBnYWxsZXJ5VHBsLFxuICAgICAgICBjb250cm9sbGVyIDogZ2FsbGVyeUN0cmxcbiAgICB9XG4gICAgXG59O1xuXG5leHBvcnQgeyByb3V0ZXMgfTtcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246NiwgYnJvd3Nlcjp0cnVlICovXG5cbmNvbnN0IGdldEpTT04gPSAodXJsKSA9PiB7XG4gICAgY29uc3QgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKCAocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoeGhyLnJlYWR5U3RhdGUgPT09IDQpIHtcbiAgICAgICAgICAgICAgICBpZiAoeGhyLnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoSlNPTi5wYXJzZSh4aHIucmVzcG9uc2VUZXh0KSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KHhoci5yZXNwb25zZVRleHQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgeGhyLm9wZW4oJ0dFVCcsIHVybCk7XG4gICAgICAgIHhoci5zZW5kKCk7XG4gICAgfSk7XG59O1xuXG5leHBvcnQgeyBnZXRKU09OIH07XG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOjYgKi9cblxuLyogdXRpbGl0eSBtZXRob2QgZm9yIGVhc3kgdGVtcGxhdGluZyBvZiByZXBlYXRpbmcgaHRtbCBlbGVtZW50c1xuICpcbiAqIEBwYXJhbXMgIFthcnJheV0gIGxpdGVyYWxzQXJyICAgW2FycmF5IG9mIGFsbCB0aGUgbGl0ZXJhbCBzZWN0aVxuICogQHBhcmFtcyAgW2FycmF5XSAgLi4uY29va2VkICAgICBbcmVzdCBwYXJhbTogYWxsIHRoZSBwcm9jY2Vzc2VkIGV4cHJlc3Npb25zXVxuICogQHJldHVybnMgW3N0cmluZ10gICAgICAgICAgICAgICBbdGhlIHByb2Nlc3NlZCBzdHJpbmddXG4qL1xuY29uc3QgaHRtbCA9IChsaXRlcmFsc0FyciwgLi4uY29va2VkKSA9PiB7XG4gICAgbGV0IHJlc3VsdCA9ICcnO1xuICAgIFxuICAgIGNvb2tlZC5mb3JFYWNoKCAoY29vaywgaW5keCkgPT4ge1xuICAgICAgICBsZXQgbGl0ID0gbGl0ZXJhbHNBcnJbaW5keF07XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGNvb2spKSB7XG4gICAgICAgICAgICBjb29rID0gY29vay5qb2luKCcnKTtcbiAgICAgICAgfVxuICAgICAgICByZXN1bHQgKz0gbGl0O1xuICAgICAgICByZXN1bHQgKz0gY29vaztcbiAgICB9KTtcbiAgICByZXN1bHQgKz0gbGl0ZXJhbHNBcnJbbGl0ZXJhbHNBcnIubGVuZ3RoIC0gMV07XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5cblxuLyogZ2VuZXJhdGUgZ2FsbGVyeSBsaW5rXG4qL1xuY29uc3QgYWJvdXRUcGwgPSAoZGF0YSkgPT4gaHRtbGBcbiAgICA8aDI+QWJvdXQ8L2gyPlxuICAgIDxwPkxvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBxdWkgZGljbyBlcmF0IGludGVsbGVnZWJhdCBhbiwgYXQgaGlzIG11bmVyZSBlcnJvcmlidXMgbWVkaW9jcml0YXRlbS4gRXF1aWRlbSBwcmluY2lwZXMgZXN0IGFkLCBoYXMgZWkgdmlkZSBkaWNlcmV0LiBQcm8gb2JsaXF1ZSBwb3NpZG9uaXVtIHJlcHVkaWFuZGFlIG5vLCBwdXRlbnQgZG9jdHVzIG9jdXJyZXJldCBleCBlYW0uIEZhY2VyIHNlbXBlciBhc3N1ZXZlcml0IGFuIG1laSwgaW4gbmVjIGFsdGVyYSBub251bWVzIHZlcml0dXMuIEhpcyBkb2xvcmVzIGludmVuaXJlIGRpc3NlbnRpdW50IGVpLCBlcm9zIHRhdGlvbiBzYXBpZW50ZW0gbmVjIGFkLCB1bnVtIG1haW9ydW0gZmllcmVudCBuZSBpdXMuIEF0IGhhcnVtIGFldGVybm8gdmltLCBpZCBkaWNhbSB1dHJvcXVlIHByaSwgbmUgYXBlcmlhbSBkaXNzZW50aWFzIHNlZC4gRHVvIGFkIGRvbG9yZSB2b2x1cHR1YSwgZmFjZXIgZG9jdHVzIHBsYWNlcmF0IGhpcyBubywgbWVsIGFuIGVsaXQgb2ZmZW5kaXQuPC9wPlxuXG4gICAgPHA+UXVhcyBkZWxlbml0aSBpbXBlcmRpZXQgYWQgc2VkLCBlYW0gaW4gbXVuZGkgYWZmZXJ0IGNvcnJ1bXBpdC4gRXggZW9zIHV0aW5hbSB0aW1lYW0gY29uc2VxdWF0LCBkdW8gZXQgZGljbyBhdWRpYW0gdml0dXBlcmF0b3JpYnVzLCBldW0gY3UgdGFjaW1hdGVzIG1hbmRhbXVzIHVsbGFtY29ycGVyLiBDdSBhZG1vZHVtIHBlcnNlcXVlcmlzIGRlZmluaXRpb25lcyBjdW0sIGV1IGhpcyBhdWRpYW0gY29tcGxlY3RpdHVyLiBBcHBldGVyZSBlbG9xdWVudGlhbSBleCBtZWwsIHN1bW1vIHVsbGFtY29ycGVyIHZpdHVwZXJhdG9yaWJ1cyBpbiB2aW0sIHV0IG5hdHVtIGVyaXB1aXQgZXVpc21vZCBjdW0uIEV4IGVsZWlmZW5kIGNvbmNlcHRhbSBjdW0sIG1laSBlaSBhZXRlcm5vIG9mZmljaWlzIG1uZXNhcmNodW0uPC9wPlxuXG4gICAgPHA+TWVpIGluIGRlYmV0IGFsaXF1aXAuIElkIGRpY3RhcyB0YWNpbWF0ZXMgdm9sdXB0YXRpYnVzIGV1bSwgdG9sbGl0IHN1YXZpdGF0ZSBleHBldGVuZGlzIHRlIGhhcywgc2VhIG9ibGlxdWUgZG9sb3JlbSBuZS4gVGUgcXVpIGFmZmVydCBkZWxlY3R1cyBtZWRpb2NyZW0sIHRlIHNlZCB2aWRpc3NlIHBvbmRlcnVtLCBtb2R1cyBudXNxdWFtIHByb2JhdHVzIHRlIHNlYS4gTmVjIGlkIHV0YW11ciBwZXJpY3VsaXMuPC9wPlxuXG4gICAgPHA+Qm9ub3J1bSBpcmFjdW5kaWEgaW5jaWRlcmludCBwcm8gZXUsIHF1byBlaSBpbXBlZGl0IHBhcnRpZW5kbyB0aW5jaWR1bnQsIG9kaW8gZG9sb3JlcyBkdW8gbmUuIFNlYSBldCBlcm9zIGZ1Z2l0IGludGVyZXNzZXQsIHF1byBtdWNpdXMgZWZmaWNpZW5kaSBlbG9xdWVudGlhbSBldS4gVmlzIGNhdXNhZSBpbmVybWlzIHJlZm9ybWlkYW5zIGV4LiBTaXQgdGUgdm9sdXB0dWEgcmVwdWRpYXJlLCBldW0gdG90YSBsdWR1cyBubywgZXUgcHJvIGl1ZGljbyBpbmltaWN1cy48L3A+XG5cbiAgICA8cD5NZWEgaWQgc29sZXQgZXF1aWRlbSBncmFlY2lzLCBhdHF1aSBhc3NlbnRpb3IgYWRpcGlzY2luZyBpdXMgaWQsIGV1bSBzY3JpcHNlcml0IGRpc3NlbnRpZXQgZWEuIFF1byBuZSBkZWNvcmUgbGF0aW5lLCBldSBob21lcm8gdml0dXBlcmF0b3JpYnVzIGhpcywgbm8gZmFsbGkgZ3JhZWNlIHZpbS4gTm92dW0gZmFjaWxpc2lzIHV0IG1lYSwgYW4gY3VtIHByb2JvIGxlZ2VyZSBkb2xvcmVtLCBvbW5pdW0gZG9sb3JlcyBhY2N1c2FtdXMgZXVtIHRlLiBSZWJ1bSBnbG9yaWF0dXIgcXVpIGVhLCBhdWd1ZSBwb3NpZG9uaXVtIHBlciBpbi4gSW4gaW1wZWRpdCBmYWNpbGlzIGRlc2VydWlzc2UgdmltLjwvcD5cbmA7XG5cbmV4cG9ydCB7IGFib3V0VHBsIH07XG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOjYgKi9cblxuLyogdXRpbGl0eSBtZXRob2QgZm9yIGVhc3kgdGVtcGxhdGluZyBvZiByZXBlYXRpbmcgaHRtbCBlbGVtZW50c1xuICpcbiAqIEBwYXJhbXMgIFthcnJheV0gIGxpdGVyYWxzQXJyICAgW2FycmF5IG9mIGFsbCB0aGUgbGl0ZXJhbCBzZWN0aVxuICogQHBhcmFtcyAgW2FycmF5XSAgLi4uY29va2VkICAgICBbcmVzdCBwYXJhbTogYWxsIHRoZSBwcm9jY2Vzc2VkIGV4cHJlc3Npb25zXVxuICogQHJldHVybnMgW3N0cmluZ10gICAgICAgICAgICAgICBbdGhlIHByb2Nlc3NlZCBzdHJpbmddXG4qL1xuY29uc3QgaHRtbCA9IChsaXRlcmFsc0FyciwgLi4uY29va2VkKSA9PiB7XG4gICAgbGV0IHJlc3VsdCA9ICcnO1xuICAgIFxuICAgIGNvb2tlZC5mb3JFYWNoKCAoY29vaywgaW5keCkgPT4ge1xuICAgICAgICBsZXQgbGl0ID0gbGl0ZXJhbHNBcnJbaW5keF07XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGNvb2spKSB7XG4gICAgICAgICAgICBjb29rID0gY29vay5qb2luKCcnKTtcbiAgICAgICAgfVxuICAgICAgICByZXN1bHQgKz0gbGl0O1xuICAgICAgICByZXN1bHQgKz0gY29vaztcbiAgICB9KTtcbiAgICByZXN1bHQgKz0gbGl0ZXJhbHNBcnJbbGl0ZXJhbHNBcnIubGVuZ3RoIC0gMV07XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5cblxuLyogZ2VuZXJhdGUgZ2FsbGVyeSBsaW5rXG4qL1xuY29uc3QgY29udGFjdFRwbCA9ICgpID0+IGh0bWxgXG4gICAgPGgyPkNvbnRhY3Q8L2gyPlxuICAgIFxuICAgIDxoMz5GaWxsIG91dCBvdXIgY29udGFjdCBmb3JtIGJlbG93IHRvIGdldCBpbiB0b3VjaCB3aXRoIHVzITwvaDM+XG4gICAgPGZvcm0+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJHcmlkIEdyaWQtLWd1dHRlcnMgR3JpZC0tMW9mMlwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIkdyaWQtY2VsbFwiPlxuICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJuYW1lXCI+TmFtZTo8L2xhYmVsPlxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGlkPVwibmFtZVwiIG5hbWU9XCJuYW1lXCIgdmFsdWU9XCJcIiBwbGFjZWhvbGRlcj1cIkpvaG4gRG9lXCIgcmVxdWlyZWQ9XCJyZXF1aXJlZFwiIGF1dG9mb2N1cz1cImF1dG9mb2N1c1wiIC8+XG5cbiAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwiZW1haWxcIj5FbWFpbCBBZGRyZXNzOjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJlbWFpbFwiIGlkPVwiZW1haWxcIiBuYW1lPVwiZW1haWxcIiB2YWx1ZT1cIlwiIHBsYWNlaG9sZGVyPVwiam9obmRvZUBleGFtcGxlLmNvbVwiIHJlcXVpcmVkPVwicmVxdWlyZWRcIiAvPlxuXG4gICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cInRlbGVwaG9uZVwiPlRlbGVwaG9uZTogPC9sYWJlbD5cbiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRlbFwiIGlkPVwidGVsZXBob25lXCIgbmFtZT1cInRlbGVwaG9uZVwiIHZhbHVlPVwiXCIgLz5cblxuICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJlbnF1aXJ5XCI+RW5xdWlyeTogPC9sYWJlbD5cbiAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPVwiZW5xdWlyeVwiIG5hbWU9XCJlbnF1aXJ5XCI+XG4gICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJnZW5lcmFsXCI+R2VuZXJhbDwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwic2FsZXNcIj5IaXJlIE1lPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIkdyaWQtY2VsbFwiPlxuICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJtZXNzYWdlXCI+TWVzc2FnZTo8L2xhYmVsPlxuICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBpZD1cIm1lc3NhZ2VcIiBuYW1lPVwibWVzc2FnZVwiIHBsYWNlaG9sZGVyPVwiWW91ciBtZXNzYWdlIG11c3QgYmUgZ3JlYXRlciB0aGFuIDIwIGNoYXJjdGVyc1wiIHJlcXVpcmVkPVwicmVxdWlyZWRcIiBkYXRhLW1pbmxlbmd0aD1cIjIwXCI+PC90ZXh0YXJlYT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgIFxuICAgICAgICA8YnV0dG9uIGlkPVwic3VibWl0LWJ1dHRvblwiPlN1Ym1pdDwvYnV0dG9uPlxuICAgIDwvZm9ybT5cbmA7XG5cbmV4cG9ydCB7IGNvbnRhY3RUcGwgfTtcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246NiAqL1xuXG4vKiB1dGlsaXR5IG1ldGhvZCBmb3IgZWFzeSB0ZW1wbGF0aW5nIG9mIHJlcGVhdGluZyBodG1sIGVsZW1lbnRzXG4gKlxuICogQHBhcmFtcyAgW2FycmF5XSAgbGl0ZXJhbHNBcnIgICBbYXJyYXkgb2YgYWxsIHRoZSBsaXRlcmFsIHNlY3RpXG4gKiBAcGFyYW1zICBbYXJyYXldICAuLi5jb29rZWQgICAgIFtyZXN0IHBhcmFtOiBhbGwgdGhlIHByb2NjZXNzZWQgZXhwcmVzc2lvbnNdXG4gKiBAcmV0dXJucyBbc3RyaW5nXSAgICAgICAgICAgICAgIFt0aGUgcHJvY2Vzc2VkIHN0cmluZ11cbiovXG5jb25zdCBodG1sID0gKGxpdGVyYWxzQXJyLCAuLi5jb29rZWQpID0+IHtcbiAgICBsZXQgcmVzdWx0ID0gJyc7XG4gICAgXG4gICAgY29va2VkLmZvckVhY2goIChjb29rLCBpbmR4KSA9PiB7XG4gICAgICAgIGxldCBsaXQgPSBsaXRlcmFsc0FycltpbmR4XTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY29vaykpIHtcbiAgICAgICAgICAgIGNvb2sgPSBjb29rLmpvaW4oJycpO1xuICAgICAgICB9XG4gICAgICAgIHJlc3VsdCArPSBsaXQ7XG4gICAgICAgIHJlc3VsdCArPSBjb29rO1xuICAgIH0pO1xuICAgIHJlc3VsdCArPSBsaXRlcmFsc0FycltsaXRlcmFsc0Fyci5sZW5ndGggLSAxXTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcblxuXG4vKiBnZW5lcmF0ZSBnYWxsZXJ5IGxpbmtcbiovXG5jb25zdCBpbWFnZV9saW5rID0gKGltYWdlKSA9PiBodG1sYFxuICAgIDxkaXYgY2xhc3M9XCJnYWxsZXJ5LWxpbmsgR3JpZC1jZWxsXCI+XG4gICAgICAgIDxhIGhyZWY9XCIke2ltYWdlLmxhcmdlfVwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdhbGxlcnktbGluay1pbWdcIiBzdHlsZT1cImJhY2tncm91bmQtaW1hZ2U6IHVybCgke2ltYWdlLnRodW1ifSlcIj48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJnYWxsZXJ5LWxpbmstdGl0bGVcIj5cbiAgICAgICAgICAgICAgICAke2ltYWdlLmFsdH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2E+XG4gICAgPC9kaXY+XG5gO1xuXG5cbi8qIGdlbmVyYXRlIGdyaWQgbGlzdCBvZiBnYWxsZXJpZXNcbiovXG5jb25zdCBnYWxsZXJ5VHBsID0gKGdhbGxlcnkpID0+IGh0bWxgXG4gICAgPGgyPiR7Z2FsbGVyeS50aXRsZX08L2gyPlxuICAgIDxwPiR7Z2FsbGVyeS5kZXNjcmlwdGlvbn08L3A+XG4gICAgPGRpdiBjbGFzcz1cIkdyaWQgR3JpZC0tZ3V0dGVycyBzbWFsbC1HcmlkLS1mdWxsIG1lZC1HcmlkLS0xb2YyIGxhcmdlLUdyaWQtLTFvZjMgZ2FsbGVyeS1saXN0XCI+XG4gICAgICAgICR7Z2FsbGVyeS5pbWFnZXMubWFwKCBpbWFnZSA9PiBpbWFnZV9saW5rKGltYWdlKSApfVxuICAgIDwvZGl2PlxuYDtcblxuZXhwb3J0IHsgZ2FsbGVyeVRwbCB9O1xuIiwiLyoganNoaW50IGVzdmVyc2lvbjo2ICovXG5cbi8qIHV0aWxpdHkgbWV0aG9kIGZvciBlYXN5IHRlbXBsYXRpbmcgb2YgcmVwZWF0aW5nIGh0bWwgZWxlbWVudHNcbiAqXG4gKiBAcGFyYW1zICBbYXJyYXldICBsaXRlcmFsc0FyciAgIFthcnJheSBvZiBhbGwgdGhlIGxpdGVyYWwgc2VjdGlcbiAqIEBwYXJhbXMgIFthcnJheV0gIC4uLmNvb2tlZCAgICAgW3Jlc3QgcGFyYW06IGFsbCB0aGUgcHJvY2Nlc3NlZCBleHByZXNzaW9uc11cbiAqIEByZXR1cm5zIFtzdHJpbmddICAgICAgICAgICAgICAgW3RoZSBwcm9jZXNzZWQgc3RyaW5nXVxuKi9cbmNvbnN0IGh0bWwgPSAobGl0ZXJhbHNBcnIsIC4uLmNvb2tlZCkgPT4ge1xuICAgIGxldCByZXN1bHQgPSAnJztcbiAgICBcbiAgICBjb29rZWQuZm9yRWFjaCggKGNvb2ssIGluZHgpID0+IHtcbiAgICAgICAgbGV0IGxpdCA9IGxpdGVyYWxzQXJyW2luZHhdO1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjb29rKSkge1xuICAgICAgICAgICAgY29vayA9IGNvb2suam9pbignJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ICs9IGxpdDtcbiAgICAgICAgcmVzdWx0ICs9IGNvb2s7XG4gICAgfSk7XG4gICAgcmVzdWx0ICs9IGxpdGVyYWxzQXJyW2xpdGVyYWxzQXJyLmxlbmd0aCAtIDFdO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuXG5cbi8qIGdlbmVyYXRlIGdhbGxlcnkgbGlua1xuKi9cbmNvbnN0IGhvbWVUcGwgPSAoZGF0YSkgPT4gaHRtbGBcbiAgICA8aDI+V2VsY29tZTwvaDI+XG4gICAgXG4gICAgPGgzPlRoaXMgaXMgYSBQaG90byBHYWxsZXJ5IEFwcCB3cml0dGVuIGluIHZhbmlsbGEgRVM2IEphdmFTY3JpcHQ8L2gzPlxuICAgIDxwPklmIHlvdSBjYW4gcmVhZCB0aGlzLCB0aGUgYXBwIHJvdXRlciBzZW50IHlvdSB0byB0aGUgaG9tZSBwYWdlLjwvcD5cbmA7XG5cbmV4cG9ydCB7IGhvbWVUcGwgfTtcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246NiAqL1xuXG4vKiB1dGlsaXR5IG1ldGhvZCBmb3IgZWFzeSB0ZW1wbGF0aW5nIG9mIHJlcGVhdGluZyBodG1sIGVsZW1lbnRzXG4gKlxuICogQHBhcmFtcyAgW2FycmF5XSAgbGl0ZXJhbHNBcnIgICBbYXJyYXkgb2YgYWxsIHRoZSBsaXRlcmFsIHNlY3RpXG4gKiBAcGFyYW1zICBbYXJyYXldICAuLi5jb29rZWQgICAgIFtyZXN0IHBhcmFtOiBhbGwgdGhlIHByb2NjZXNzZWQgZXhwcmVzc2lvbnNdXG4gKiBAcmV0dXJucyBbc3RyaW5nXSAgICAgICAgICAgICAgIFt0aGUgcHJvY2Vzc2VkIHN0cmluZ11cbiovXG5jb25zdCBodG1sID0gKGxpdGVyYWxzQXJyLCAuLi5jb29rZWQpID0+IHtcbiAgICBsZXQgcmVzdWx0ID0gJyc7XG4gICAgXG4gICAgY29va2VkLmZvckVhY2goIChjb29rLCBpbmR4KSA9PiB7XG4gICAgICAgIGxldCBsaXQgPSBsaXRlcmFsc0FycltpbmR4XTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY29vaykpIHtcbiAgICAgICAgICAgIGNvb2sgPSBjb29rLmpvaW4oJycpO1xuICAgICAgICB9XG4gICAgICAgIHJlc3VsdCArPSBsaXQ7XG4gICAgICAgIHJlc3VsdCArPSBjb29rO1xuICAgIH0pO1xuICAgIHJlc3VsdCArPSBsaXRlcmFsc0FycltsaXRlcmFsc0Fyci5sZW5ndGggLSAxXTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcblxuXG4vKiBnZW5lcmF0ZSBnYWxsZXJ5IGxpbmtcbiovXG5jb25zdCBnYWxsZXJ5X2xpbmsgPSAoZ2FsbGVyeSkgPT4gaHRtbGBcbiAgICA8ZGl2IGNsYXNzPVwiZ2FsbGVyeS1saW5rIEdyaWQtY2VsbFwiPlxuICAgICAgICA8YSBocmVmPVwiJHtnYWxsZXJ5LmxpbmtfdXJsfVwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdhbGxlcnktbGluay1pbWdcIiBzdHlsZT1cImJhY2tncm91bmQtaW1hZ2U6IHVybCgke2dhbGxlcnkuaW1nX3VybH0pXCI+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2FsbGVyeS1saW5rLXRpdGxlXCI+XG4gICAgICAgICAgICAgICAgJHtnYWxsZXJ5LnRpdGxlfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvYT5cbiAgICA8L2Rpdj5cbmA7XG5cblxuLyogZ2VuZXJhdGUgZ3JpZCBsaXN0IG9mIGdhbGxlcmllc1xuKi9cbmNvbnN0IHBvcnRmb2xpb1RwbCA9IChnYWxsZXJpZXMpID0+IGh0bWxgXG4gICAgPGRpdiBjbGFzcz1cIkdyaWQgR3JpZC0tZ3V0dGVycyBzbWFsbC1HcmlkLS1mdWxsIG1lZC1HcmlkLS0xb2YyIGxhcmdlLUdyaWQtLTFvZjMgZ2FsbGVyeS1saXN0XCI+XG4gICAgICAgICR7Z2FsbGVyaWVzLm1hcCggZ2FsbGVyeSA9PiBnYWxsZXJ5X2xpbmsoZ2FsbGVyeSkgKX1cbiAgICA8L2Rpdj5cbmA7XG5cbmV4cG9ydCB7IHBvcnRmb2xpb1RwbCB9O1xuIiwiLyoganNoaW50IGVzdmVyc2lvbjo2LCBicm93c2VyOnRydWUgKi9cblxuLyogcmVnaXN0ZXIgaGFuZGxlciB0byBhbiBldmVudCBlbWl0dGVkIGJ5IGEgdGFyZ2V0ICovXG5jb25zdCAkb24gPSAodGFyZ2V0LCBldmVudCwgaGFuZGxlcikgPT4ge1xuICAgIHJldHVybiB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlcik7XG59O1xuXG5leHBvcnQgeyAkb24gfTtcbiJdfQ=="}